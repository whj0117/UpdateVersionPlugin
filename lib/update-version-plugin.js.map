{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"babel-polyfill\"","webpack:///./plugin/update-version-plugin.js","webpack:///external \"fs\"","webpack:///external \"chalk\"","webpack:///external \"webpack\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","fs","chalk","DefinePlugin","AddZero","time","toString","padStart","options","this","compiler","VersionArr","packageTxt","readFileSync","versionData","split","packageJson","JSON","parse","date","Date","today","getFullYear","getMonth","getDate","version","parseInt","versionLine","join","length","indexOf","splice","writeFileSync","isLog","console","log","green","bold","plugins","push","UPDATEVERSIONNAME","stringify","hooks","compilation","tap","htmlWebpackPluginBeforeHtmlProcessing","tapAsync","htmlPluginData","cb","sDomRelease","head","html","slice","e","red"],"mappings":"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","file":"update-version-plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"babel-polyfill\");","const fs = require('fs')\r\nconst chalk = require('chalk')\r\nconst DefinePlugin = require('webpack').DefinePlugin\r\nconst MyPlugin = 'updateVersionPlugin'\r\nconst AddZero = time => {\r\n    return time.toString().padStart(2, '0')\r\n}\r\n\r\nclass updateVersionPlugin {\r\n    constructor(options) {\r\n        this.options = options;\r\n    }\r\n    apply(compiler) {\r\n        try {\r\n            let packageTxt = fs.readFileSync('./package.json', 'utf8')\r\n            let versionData = packageTxt.split('\\n')\r\n            let packageJson = JSON.parse(packageTxt)\r\n            let VersionArr\r\n            let date = new Date()\r\n            let today = date.getFullYear() + '' + AddZero(date.getMonth() + 1) + '' + AddZero(date.getDate())\r\n            if (this.options.name) {\r\n                if (JSON.parse(packageTxt).hasOwnProperty(`${this.options.name}`)) {\r\n                    // package本身才在name枚举，更改版本\r\n                    VersionArr = packageJson[this.options.name].split('.')\r\n                } else {\r\n                    // 不存在添加默认值\r\n                    VersionArr = [1, today, 0]\r\n                }\r\n            } else {\r\n                // name不存在，用version作为枚举\r\n                VersionArr = packageJson.version.split('.')\r\n            }\r\n\r\n            if (today == VersionArr[1]) {\r\n                VersionArr[2] = parseInt(VersionArr[2]) + 1\r\n            } else {\r\n                VersionArr[1] = today\r\n                VersionArr[2] = 1\r\n            }\r\n            let versionLine = VersionArr.join('.')\r\n            let name = this.options.name || 'version'\r\n            for (let i = 0; i < versionData.length; i++) {\r\n                if (JSON.parse(packageTxt).hasOwnProperty(`${name}`)) {\r\n                    if (versionData[i].indexOf(`\"${name}\":`) != -1) {\r\n                        versionData.splice(i, 1, `  \"${name}\": \"${versionLine}\",`);\r\n                        break;\r\n                    }\r\n                } else {\r\n                    if (versionData[i].indexOf('{') !== -1) {\r\n                        versionData.splice(i + 1, 0, `  \"${name}\": \"${versionLine}\",`);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            fs.writeFileSync('./package.json', versionData.join('\\n'), 'utf8')\r\n            if (this.options.isLog) {\r\n                console.log(chalk.green.bold('更新版本号成功！当前最新版本号为：' + versionLine))\r\n            }\r\n            let plugins = compiler.options.plugins\r\n            plugins.push(new DefinePlugin({\r\n                UPDATEVERSIONNAME: JSON.stringify(this.options.name)\r\n            }))\r\n            compiler.hooks.compilation.tap(MyPlugin, (compilation, options) => {\r\n                compilation.hooks.htmlWebpackPluginBeforeHtmlProcessing.tapAsync('changeHtmlPluginData', (htmlPluginData, cb) => {\r\n                    let sVersion = require('../package.json').version\r\n                    let sDomRelease = `<input type=\"hidden\" id=\"release\" value=${sVersion} />`\r\n                    let head = htmlPluginData.html.indexOf('<body>') + 6\r\n                    htmlPluginData.html = htmlPluginData.html.slice(0, head) + sDomRelease + htmlPluginData.html.slice(head)\r\n                    cb()\r\n                })\r\n            })\r\n        } catch (e) {\r\n            if (this.options.isLog) {\r\n                console.log(chalk.red.bold('读取文件修改版本号出错:', e.toString()))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = updateVersionPlugin;","module.exports = require(\"fs\");","module.exports = require(\"chalk\");","module.exports = require(\"webpack\");"],"sourceRoot":""}